# Generated by Django 3.1 on 2021-07-28 21:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('nome', models.CharField(max_length=50)),
                ('CPF', models.CharField(max_length=20)),
                ('endereco', models.CharField(max_length=50)),
                ('estado', models.CharField(max_length=50)),
                ('municipio', models.CharField(max_length=50)),
                ('telefone', models.CharField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'cliente',
                'verbose_name_plural': 'clientes',
                'db_table': 'cliente',
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('codigo_categoria', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nome_categoria', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'categoria',
                'verbose_name_plural': 'categorias',
                'db_table': 'categoria',
            },
        ),
        migrations.CreateModel(
            name='ItensDoPedido',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'itens_pedido',
                'verbose_name_plural': 'itens_pedidos',
                'db_table': 'itens_pedido',
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('codigo_produto', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nome_produto', models.CharField(max_length=100)),
                ('preco_produto', models.CharField(max_length=30)),
                ('quantidade_estoque', models.CharField(max_length=15)),
                ('categoria', models.ForeignKey(error_messages={'unique': 'The Geeks Field you enetered is not unique.'}, on_delete=django.db.models.deletion.RESTRICT, to='ecommerce.categoria')),
            ],
            options={
                'verbose_name': 'produto',
                'verbose_name_plural': 'produtos',
                'db_table': 'produto',
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('codigo_pedido', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('data_pedido', models.DateField()),
                ('cliente', models.ForeignKey(error_messages={'unique': 'The Geeks Field you enetered is not unique.'}, on_delete=django.db.models.deletion.RESTRICT, related_name='cliente', to=settings.AUTH_USER_MODEL)),
                ('produtos', models.ManyToManyField(through='ecommerce.ItensDoPedido', to='ecommerce.Produto')),
            ],
            options={
                'verbose_name': 'pedido',
                'verbose_name_plural': 'pedidos',
                'db_table': 'pedido',
            },
        ),
        migrations.AddField(
            model_name='itensdopedido',
            name='pedido',
            field=models.ForeignKey(error_messages={'unique': 'The Geeks Field you enetered is not unique.'}, on_delete=django.db.models.deletion.RESTRICT, to='ecommerce.pedido'),
        ),
        migrations.AddField(
            model_name='itensdopedido',
            name='produto',
            field=models.ForeignKey(error_messages={'unique': 'The Geeks Field you enetered is not unique.'}, on_delete=django.db.models.deletion.RESTRICT, to='ecommerce.produto'),
        ),
    ]
